package com.tukutano;

import com.google.zxing.Binarizer;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.ChecksumException;
import com.google.zxing.DecodeHintType;
import com.google.zxing.FormatException;
import com.google.zxing.LuminanceSource;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import com.google.zxing.qrcode.QRCodeReader;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Hashtable;
import javax.imageio.ImageIO;

/**
 * メインクラス.
 *
 * @author tktomaru
 *
 */
public class ZxingQRReader {
  // 解析文字コード
  private static final String ENCORD_NAME = "ISO-8859-1";
  // カンマ
  private static final String COMMA = ",";

  public static final void main(String[] args) {

    if (args.length == 0) {
      System.out.println("コマンドライン引数がありません。");
      System.exit(1);
    }

    System.out.println("File name:" + args[0]);
    String inputFileName = args[0];

    try {
      Hashtable<DecodeHintType, String> decodeHint = new Hashtable<DecodeHintType, String>();
      decodeHint.put(DecodeHintType.CHARACTER_SET, ENCORD_NAME);
      // 画像データを読み込む
      BufferedImage image = ImageIO.read(new File(inputFileName));
      LuminanceSource source = new BufferedImageLuminanceSource(image);
      Binarizer binarizer = new HybridBinarizer(source);
      BinaryBitmap bitmap = new BinaryBitmap(binarizer);

      QRCodeReader reader = new QRCodeReader();

      // QRCodeReader#decode()には以下の情報を渡す
      // (1)読み込んだイメージ
      Result result = reader.decode(bitmap, decodeHint);


      FileWriter fileWriter = null;
      try {
        fileWriter = new FileWriter(getFileName(inputFileName) + ".csv");

        fileWriter.append(inputFileName);
        fileWriter.append(COMMA);
        // リストの内容を順に処理
        for (byte b : result.getText().getBytes(ENCORD_NAME)) {
          System.out.printf("%02X", b);
          String out = String.format("%02X", b);
          fileWriter.append(out);
        }

        System.out.println("CSVファイル出力完了");

      } catch (Exception e) {
        e.printStackTrace();
      } finally {
        try {
          fileWriter.flush();
          fileWriter.close();
        } catch (IOException e) {
          e.printStackTrace();
        }
      }
    } catch (NotFoundException e) {
      System.err.println("[" + inputFileName + "] イメージの中にバーコードが見つからないためデコードで例外が発生.");
      e.printStackTrace();
    } catch (ChecksumException e) {
      System.err.println("[" + inputFileName + "] バーコードが見つかったがチェックサム検査で例外が発生.");
      e.printStackTrace();
    } catch (FormatException e) {
      System.err.println("[" + inputFileName + "] は書式不正のためデコードで例外が発生.");
      e.printStackTrace();
    } catch (IOException e) {
      System.err.println("[" + inputFileName + "] を読み込むときに例外が発生.");
      e.printStackTrace();
    }
  }

  public static String getFileName(final String fullPathString) {
    File file = new File(fullPathString);
    String basename = file.getName();
    String woext = basename.substring(0, basename.lastIndexOf('.'));
    return woext;
  }
}
